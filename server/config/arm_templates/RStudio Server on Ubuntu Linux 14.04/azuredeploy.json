{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "customVmName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the your VM"
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "User Name for the Virtual Machine"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "This is the size of your VM"
      }
    },
    "userAccount": {
      "type": "string",
      "metadata": {
        "description": "User Account for file storage"
      }
    }
  },
  "variables": {
    "publicIPAddressName": "[concat('userImagePublicIP', parameters('customVmName'))]",
    "diagnosticsAccountId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', 'your-resource-group-here', '/providers/','Microsoft.Storage/storageAccounts/', 'your-storage-account-here')]",
    "vmName": "[parameters('customVmName')]",
    "nicName": "[concat(parameters('customVmName'),'Nic')]",
    "publicIPAddressType": "Static",
    "apiVersion": "2015-06-15",
    "templatelink": "[concat('https://raw.githubusercontent.com/singhkay/azure-quickstart-templates/master/101-vm-from-user-image/', 'new' ,'vnet.json')]"
  },
  "resources": [
    {
            "apiVersion": "2015-01-01",
            "name": "vnet-template",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[variables('templatelink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[concat(parameters('customVmName'), 'vNet')]"
                    },
                    "subnetName": {
                        "value": "[concat(parameters('customVmName'), 'subnet')]"
                    },
                    
                    "existingVnetResourceGroupName": {
                        "value": "[concat(parameters('customVmName'), 'vNet')]"
                    }
                }
            }
        },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "tags": {
                  "group": "[parameters('customVmName')]"
              },
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('customVmName')]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "tags": {
                  "group": "[parameters('customVmName')]"
              },
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "Microsoft.Resources/deployments/vnet-template"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[reference('vnet-template').outputs.subnet1Ref.value]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "tags": {
                  "group": "[parameters('customVmName')]"
              },
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(variables('vmName'),'-osDisk')]",
            "osType": "Linux",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "https://your-storage-account-here.blob.core.windows.net/system/Microsoft.Compute/Images/vhds/Lux1404RStudio-osDisk.750aeeb0-18c9-48a1-a0c9-a7162884fcd7.vhd"
            },
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', 'your-storage-account-here'), variables('apiVersion')).primaryEndpoints.blob, 'vhds/',variables('vmName'), uniquestring(resourceGroup().id), 'osDisk.vhd')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', 'your-storage-account-here'), variables('apiVersion')).primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[concat(parameters('customVmName'), 'NSG')]",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "NSG - Front End"
        },
        "properties": {
          "securityRules": [
            {
              "name": "rdp-rule",
              "properties": {
                "description": "Allow RDP",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "web-rule",
              "properties": {
                "description": "Allow WEB",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1010,
                "direction": "Inbound"
              }
            },
            {
              "name": "Rstudio",
              "properties": {
                "description": "Rstudio",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8787",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1100,
                "direction": "Inbound"
              }
            }
          ]
        }
    },
    {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmName'),'/', 'customVmName')]",
          "apiVersion": "[variables('apiVersion')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": ["https://your-storage-account-here.blob.core.windows.net/script/mount.sh"],
              "commandToExecute": "[concat('sudo sh mount.sh ',  parameters('userAccount'))]"
            }
          }
        },
        {
          "name": "[concat(variables('vmName'),'/Microsoft.Insights.VMDiagnosticsSettings')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
          ],
          "tags": {
              "displayName": "AzureDiagnostics"
          },
          "properties": {
            "publisher": "Microsoft.OSTCExtensions",
            "type": "LinuxDiagnostic",
            "typeHandlerVersion": "2.3",
            "autoUpgradeMinorVersion": true,
            "protectedSettings": {
              "storageAccountName": "your-storage-account-here",
              "storageAccountKey": "[listkeys(variables('diagnosticsAccountId'), variables('apiVersion')).key1]",
              "storageAccountEndPoint": "https://core.windows.net"
            }
          }
        }
      ]
}